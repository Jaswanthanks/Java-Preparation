# 💼 Commission & Student Management - Java Project

A beginner-friendly Java application demonstrating the use of **Object-Oriented Programming** concepts such as **Encapsulation**, **Class Design**, **Getters/Setters**, and **Conditional Logic** to calculate sales commission based on dynamic input. This mini project also includes a basic `Student` class to represent object instantiation and method execution.

---

## 🚀 Project Overview

This project consists of two core modules:
1. **Commission Calculation Module** - Calculates commission based on sales performance tiers.
2. **Student Class** - A basic representation of object creation with a display message.

---

## 🧩 Project Structure

Assigment2/
├── Commission.java # Commission logic with encapsulated data
├── Student.java # Simple class with a display method
└── Main.java # Main driver class to execute the program

## 📌 Features

- 📦 Modular class design (`Commission`, `Student`, `Main`)
- ✅ Uses Java best practices (OOP, encapsulation, setters/getters)
- 📊 Commission tier logic:
  - `>= ₹100000` → 10% commission
  - `₹50000 - ₹99999` → 5% commission
  - `₹30000 - ₹49999` → 3% commission
  - `< ₹30000` → No commission
- 🧪 Demonstrates basic `System.out` interaction

---

## 🧪 Sample Output
Student object is created
Commission for Jash: ₹4000.0


---

## 🛠️ How to Run

### 💻 Prerequisites
- Java JDK 8 or above
- IDE like IntelliJ IDEA, Eclipse, or VS Code

### 🔧 Steps
1. Clone the repository:
    ```bash
    git clone https://github.com/yourusername/Commission-Student-Project.git
    cd Commission-Student-Project
    ```

2. Compile the Java files:
    ```bash
    javac Assigment2/*.java
    ```

3. Run the main class:
    ```bash
    java Assigment2.Main
    ```

---

## 🧠 Concepts Demonstrated

| Concept          | Description                                  |
|------------------|----------------------------------------------|
| Encapsulation    | Data hiding with private fields & accessors  |
| Class & Objects  | Object creation and method invocation        |
| Conditional Logic| Tiered commission calculation logic          |
| Modular Design   | Separation of concerns with multiple classes |

---

## 📁 Future Enhancements

- 🔄 Add user input functionality via Scanner
- 📈 Visualize commission statistics
- 💾 Persist commission data using file I/O or database
- 🧪 Add unit tests for commission logic

---

## 👨‍💻 Author

- **Jash**  
  📍 Chennai  
  💼 Aspiring Java Developer  
  🌐 [LinkedIn](https://www.linkedin.com/in/jaswanthanks/) | [GitHub](https://github.com/Jaswanthanks)

---

